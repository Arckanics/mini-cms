@mixin inputTxt ($active-color) {
  
  background-color: hsl(12, 12%, 92%);
  box-shadow: 0 0 4px 0 transparentize($color: $active-color, $amount: 0.5) inset;
  outline: solid transparent 2px;

  &:focus,
  &:hover {
    outline-color: $active-color;
  }



  &::placeholder {
    color: transparentize($color: $active-color, $amount: .3);
  }
}

@mixin inputWrap($color) {
  transition: 150ms;

  &>* {
    transition: 150ms;
  }

  &.active, &:focus-within {
    & .label {
      @apply pl-2 font-extrabold;
      color: darken($color: $color, $amount: 7%);
      text-decoration-color: transparent;
    }
  }

  border-radius: $rad-md;

  &:hover,
  &:focus-within,
  &.active {
    background-color: transparentize($color: $color, $amount: .9)
  }
}

.input-wrap {
  @include inputWrap($primary);
  &.secondary {
    @include inputWrap($secondary);
  }
}

.input-txt[type=text],
.input-txt[type=password],
.input-txt {
  @apply block p-3 rounded-md text-lg color-dark w-full;
  @include inputTxt($primary);
  &.secondary {
    @include inputTxt($secondary);
  }

}

@mixin inputNumber ($active-color) {
  background-color: hsl(12, 12%, 92%);
  box-shadow: 0 0 4px 0 transparentize($color: $active-color, $amount: 0.5) inset;
  outline: solid transparent 2px;

  &:focus,
  &:hover {
    outline-color: $active-color;
  }

  &::placeholder {
    color: transparent;
  }
}

.input-number {
  @include inputNumber($primary);
  &.secondary {
    @include inputNumber($secondary);
  }
  @apply block p-3 rounded-md color-dark;
  &::-webkit-inner-spin-button, &::-webkit-outer-spin-button {
    -webkit-appearance: none !important;
  }

  &[type=number] {
    -moz-appearance: textfield;
  }  
}

@mixin numberWrap($color) {

  background-color: $light;
  box-shadow: 0 0 4px 0 transparentize($color: $color, $amount: 0.5) inset;
  outline: solid transparent 2px;

  .arrow-btn {
    background-color: white;
    color: $color;
    outline: 2px solid transparentize($color: $color, $amount: 0.7);

    &:hover {
      background-color: $color;
      color: white;
    }
  }

  &:focus-within,
    &:hover {
      outline-color: $color;
    }

  .input-number {
    background-color: transparent !important;
    box-shadow: none;
    outline: none;

    

    &::placeholder {
      color: transparent;
    }
  }
}

.input-number-wrap {

  @include numberWrap($primary);

  @apply p-0 rounded-md overflow-hidden;

  .input-number {
    @apply text-lg rounded-none cursor-pointer;
    @apply px-8 #{!important};
  }
    

  .arrow-btn {
    height: calc(100% - .75rem);
    line-height: 100%;
    @apply rounded-md text-lg aspect-square absolute m-1.5 cursor-pointer;
    &:last-child {
      right: 0;
    }
  }

  &.secondary {
    @include numberWrap($secondary);
  }
}

@mixin checkBox($color) {

  svg {
    fill: white;
  }

  &:hover .input-checkbox-false {
    outline: 2px solid transparentize($color: $color, $amount: .2);
  }

  .input-checkbox {

    

    &-true, &-false {
      @apply w-6 aspect-square rounded-md cursor-pointer;
      outline-offset: -2px;
    }
  
    &-false {
      
      background-color: #EDE9E8;
      outline: 3px solid transparentize($color: $color, $amount: .7);
      box-shadow: 0 0 4px 0 transparentize($color: $color, $amount: .5) inset;
    }
  
    &-true {
      background-color: $color;
      outline: 3px solid transparentize($color: $color, $amount: .5)
    }
  }
}

.input-checkbox {
  transition: 150ms;
  @include checkBox($primary);

  &.secondary {
    @include checkBox($secondary);
  }

  @apply flex flex-col justify-center;
}

$inp-style: (
  "primary": $primary,
  "dark": $dark,
  "clear": transparent
);

.input-group {


  @each $key,
  $val in $inp-style {
    &-#{$key}-outline {
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      gap: .5rem;

      @if $key !="clear" {
        @apply p-2 m-2;
      }

      @else {
        @apply p-0 m-2;
      }

      border-radius: $rad-md;
      outline-offset: -2px;
      outline: solid transparent 2px;
      outline-color: transparentize($color: $val, $amount: 0.8);
    }
  }
}

@mixin inputSwitch($color) {
  outline: solid 3px transparentize($color: $color, $amount: .6);
  &:hover {
    outline: solid 3px transparentize($color: $color, $amount: .3);
  }
}

@mixin inputSwitchBool($color) {
  background-color: $color;
  box-shadow: 0 0 3px 0 darken($color: $color, $amount: 35%) inset;
  .input-switch-button {
    box-shadow: 0 0 2px 0px darken($color: $color, $amount: 35%) inset, 0 0 3px 0 darken($color: $color, $amount: 45%);
  }
  @include inputSwitch($color)
}


.input-switch {
  transition: 150ms;
  @apply w-11 m-auto p-1 block relative h-5 cursor-pointer rounded-full min-w-[2.4rem];
  @include inputSwitch($primary);
  outline-offset: -1px;

  &.secondary {
    @include inputSwitch($secondary);
  }

  .input-switch-button {
    @apply h-4 w-4 rounded-full absolute;
    transition: 150ms;
    top: .125rem;
    left: .125rem;
    background-color: white;
    
  }

  &.false {
    @include inputSwitchBool($negative);
    &.neutral {
      @include inputSwitchBool($secondary);
    }
  }

  &.true {
    .input-switch-button {
      left: calc(100% - 1.125rem);
    }
    @include inputSwitchBool($success);
    &.neutral {
      @include inputSwitchBool($secondary);
    }
  }
}

.input-calendar {
  @apply relative p-0.5 pl-2 pr-1 rounded-md text-lg color-dark flex gap-3 select-none cursor-pointer;
  background-color: $light;
  box-shadow: 0 0 4px 0 transparentize($color: $secondary, $amount: 0.5) inset;
  outline: solid transparent 2px;

  .calendar {
    @apply absolute z-40 top-[-2px] left-[-2px] rounded-2xl rounded-tl-md shadow-lg cursor-default;
    min-width: 220px;
    background-color: white;
    outline: 1px solid transparentize($color: $secondary, $amount: .5);
    &.close {
      @apply hidden;
    }
    & > * {
      @apply p-2;
    }

    .calendar-current {
      @apply text-sm font-bold drop-shadow-md p-1 pb-0 flex justify-between items-end pl-2;
      border-bottom: 1px solid $secondary;
      .btn {
        @apply p-0.5 rounded-xl mb-1;
      }
      .icon {
        @apply w-5;
      }
    }

    .month-year {
      @apply flex flex-nowrap capitalize justify-items-stretch items-stretch gap-4;
      & > div {
        @apply grow shrink text-center flex justify-between;
      }

      .icon {
        @apply w-5;
      }
    }

    .day-names {
      @apply flex flex-nowrap text-xs py-0 font-semibold justify-items-center items-stretch gap-2 underline;
    }

    

    .case {
      @apply p-1 shrink grow text-center duration-150;
    }

    .calendar-days {
      @apply grid grid-cols-7 gap-2;
      .case {
        @apply pt-1.5 text-sm aspect-square flex justify-center items-center rounded-xl shadow cursor-pointer;
        outline: 1px solid transparentize($color: $secondary, $amount: .8);
        background-color: lighten($color: $light, $amount: 7%);
        &:not(.empty):hover , &.active {
          @apply rounded-full;
          background-color: $secondary;
          color: white;
        }

        &.empty {
          @apply opacity-0 cursor-default;
        }
      }
    }
  }

  &:focus,
  &:hover,
  &.opened {
    outline-color: $secondary;
    .calendar-icon {
      .icon {
        @apply drop-shadow-md;
        transform: scale(1.2);
      }
    }
  }

  &:focus, &.opened {
    .calendar-icon {
      background-color: $secondary;
      .icon {
        fill: white;
      }
    }
  }

  .date-txt {
    @apply m-auto;
  }

  .calendar-icon {
    transition: 150ms;
    @apply m-auto p-1 drop-shadow-md rounded-md relative;
    .icon {
      transition: 150ms;
      @apply w-6 h-6 m-auto drop-shadow;
      fill: $secondary;
    }

    
  }
}

@media screen and (max-width: 1084px) { 
  .input-wrap {
    @apply p-1 #{!important};
    .label {
      @apply pl-1 py-0 pb-0.5 text-xs no-underline;
    }
  }

  .input-txt[type=text], .input-txt[type=password], .input-txt {
    @apply text-sm p-2;
  }
  
}